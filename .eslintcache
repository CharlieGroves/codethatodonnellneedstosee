[{"C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\index.js":"1","C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\components\\App.js":"2","C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\components\\Signup.js":"3","C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\AuthContext.js":"4","C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\firebase.js":"5","C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\components\\Game.js":"6","C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\components\\PrivateRoute.js":"7","C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\components\\Login.js":"8","C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\components\\Username.js":"9"},{"size":276,"mtime":1612801756717,"results":"10","hashOfConfig":"11"},{"size":745,"mtime":1613045118721,"results":"12","hashOfConfig":"11"},{"size":2902,"mtime":1612797306515,"results":"13","hashOfConfig":"11"},{"size":1870,"mtime":1612797147344,"results":"14","hashOfConfig":"11"},{"size":443,"mtime":1612796991063,"results":"15","hashOfConfig":"11"},{"size":8190,"mtime":1613046532613,"results":"16","hashOfConfig":"11"},{"size":426,"mtime":1612866256692,"results":"17","hashOfConfig":"11"},{"size":2394,"mtime":1612797395710,"results":"18","hashOfConfig":"11"},{"size":2486,"mtime":1613048356565,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"pcawun",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\index.js",[],["40","41"],"C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\components\\App.js",[],"C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\components\\Signup.js",[],"C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\AuthContext.js",[],"C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\firebase.js",[],"C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\components\\Game.js",["42"],"import React, { useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport { Form, Button, Table } from 'react-bootstrap';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nconst firestore = firebase.firestore();\r\n\r\nfunction shuffle(array) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n  \r\n    while (0 !== currentIndex) {\r\n  \r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n  \r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n  \r\n    return array;\r\n  };\r\n\r\n  \r\n  function Leaderboard(props) {\r\n    const [disabled, setDisabled] = useState(false);\r\n    const leaderboardRef = firestore.collection('leaderboard');\r\n    const query = leaderboardRef.orderBy('score', 'desc').limit(5);\r\n\r\n    const p1Score = props.p1Score;\r\n    const p2Score = props.p2Score;\r\n\r\n    const [leaderboard] = useCollectionData(query, { idField: 'id' });\r\n    console.log(leaderboard)\r\n\r\n    const loadLeaderboard = async(e) => {\r\n        setDisabled(true)\r\n        e.preventDefault()\r\n        console.log('leaderboard')\r\n        await leaderboardRef.add({\r\n            text: \"Player 1\",\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            score: p1Score\r\n        });\r\n        await leaderboardRef.add({\r\n            text: \"Player 2\",\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            score: p2Score\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ minWidth: '97vw', marginRight: '2vw', marginLeft: '1vw'}}>\r\n                <Form onSubmit={loadLeaderboard}>\r\n                    <div>\r\n                        <Form.Group id='text'>\r\n                        {/*<Form.Label className='black'>Your Message</Form.Label>*/}\r\n                        </Form.Group>\r\n                    <Button disabled={disabled} type=\"submit\">Load Leaderboard</Button>\r\n                    </div>\r\n                </Form>\r\n                <Table responsive='sm' variant='dark'>\r\n                    <thead>\r\n                        <th>Username</th>\r\n                        <th>Score</th>\r\n                    </thead>\r\n                    <tbody>\r\n                {leaderboard && leaderboard.map(foo => \r\n                    <tr key={foo.id}>\r\n                        <td>{foo.text}</td>\r\n                        <td>{foo.score}</td>\r\n                    </tr>\r\n                )}\r\n                    </tbody>\r\n                </Table>\r\n       </div>\r\n    )\r\n\r\n}\r\nexport default function Game() {\r\n\r\n    const [playerOneUsername, setPlayerOneUsername] = useState('Player 1');\r\n    const [playerTwoUsername, setPlayerTwoUsername] = useState('Player 2');\r\n\r\n    let cards = [];\r\n\r\n    let p1 = [];\r\n    let p2 = [];\r\n\r\n    for(var i = 1; i < 4; i++) {\r\n        for (var j = 1; j < 11; j++) {\r\n            if (i === 1) {\r\n                cards.push(`red ${j}`)\r\n            } else if (i === 2) {\r\n                cards.push(`black ${j}`)\r\n            } else if (i === 3) {\r\n                cards.push(`yellow ${j}`)\r\n            }\r\n        }\r\n    }\r\n\r\n    let newCards = shuffle(cards);\r\n\r\n    for (var k = 0; k < 30; k++) {\r\n        if (k%2 === 0) {\r\n            p1.push(newCards[k])\r\n        } else {\r\n            p2.push(newCards[k])\r\n        }\r\n    }\r\n\r\n    let p1Score = 0;\r\n    let p2Score = 0;\r\n\r\n    for(let x = 0; x < 15; x++) {\r\n        let p1Colour = p1[x].slice(0, -2);\r\n        let p2Colour = p2[x].slice(0, -2);\r\n        if (p1[x].slice(0, -2) === p2[x].slice(0, -2) || p1[x].slice(0, -3) === p2[x].slice(0, -3)) {\r\n            if(Number(p1[x].substr(p1[x].length - 2)) > Number(p2[x].substr(p2[x].length - 2))) {\r\n                p1Score++;\r\n            } else {\r\n                p2Score++;\r\n            }\r\n        } else {\r\n            if (p1Colour === 'red' && p2Colour === 'black') {\r\n                p1Score++;\r\n            } else if (p1Colour === 'yellow' && p2Colour === 'red') {\r\n                p1Score++;\r\n            } else if (p1Colour === 'black' && p2Colour === 'yellow') {\r\n                p1Score++;\r\n            } else {\r\n                p2Score++;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPlayerOneUsernameFunction(e) {\r\n        e.preventDefault();\r\n        let p1card = document.getElementById('p1card')\r\n        p1card.value = 'test'\r\n        document.getElementById('p1card').value = ((document.getElementById('playerone').value) + \"'s Cards\")\r\n        document.getElementById('p1points').value = ((document.getElementById('playerone').value) + `'s Points Total: ${p1Score}`)\r\n        console.log('test')\r\n    }\r\n\r\n    function setPlayerTwoUsernameFunction(e) {\r\n        e.preventDefault();\r\n        setPlayerTwoUsername(document.getElementById('playertwo').value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{ marginLeft: \"10px\", marginTop: '10px', display: 'flex', flexWrap: 'wrap'}}>\r\n                <div>\r\n                        <p> \r\n                            <Form style={{ display: 'flex', flexWrap: 'wrap'}} onSubmit={setPlayerOneUsernameFunction}>\r\n                                <Form.Control id='playerone' style={{ maxWidth: \"75vw\", marginRight: '5px' }} placeholder='Player One Username' />\r\n                                <Button type=\"submit\">Set</Button>\r\n                            </Form>\r\n                            <h1 id='p1card'>{playerOneUsername}'s Cards</h1>\r\n                            <h2 id='p1points'>{playerOneUsername}'s Points Total: {p1Score}</h2>\r\n                        </p>\r\n                    <div style={{ marginLeft: \"10px\", marginTop: '10px', display: 'flex', flexWrap: 'wrap'}}>\r\n                        {p1 && p1.map(card => <CardContainer key={card} card={card} />)}\r\n                    </div>\r\n                </div>\r\n                    <div>\r\n                        <p>\r\n                            <Form style={{ display: 'flex', flexWrap: 'wrap'}} onSubmit={setPlayerTwoUsernameFunction}>\r\n                                <Form.Control id='playertwo' style={{ maxWidth: \"75vw\", marginRight: '5px' }} placeholder='Player Two Username' />\r\n                                <Button type=\"submit\">Set</Button>\r\n                            </Form>\r\n                            <h1 id='p2card'>{playerTwoUsername}'s Cards</h1>\r\n                            <h2 id='p2points'>{playerTwoUsername}2's Points Total: {p2Score}</h2>\r\n                        </p>\r\n                    <div style={{ marginLeft: \"10px\", marginTop: '10px', display: 'flex', flexWrap: 'wrap'}}>\r\n                        {p2 && p2.map(card => <CardContainer key={card} card={card} />)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                <Leaderboard p1Score={p1Score} p2Score={p2Score}/>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction CardContainer(props) {\r\n    \r\n    if (\"red\" === props.card.slice(0, -2) || \"red\" === props.card.slice(0, -3) ) {\r\n        return(\r\n            <Card style={{ minWidth: '150px', minHeight: '200px', backgroundColor: 'red', marginLeft: '10px', marginBottom: '10px'}}>\r\n                <Card.Body style={{fontSize: \"xx-large\"}}>{props.card.substr(props.card.length - 2)}</Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n    if (\"black\" === props.card.slice(0, -2) || \"black\" === props.card.slice(0, -3) ) {\r\n        return(\r\n            <Card style={{ minWidth: '150px', minHeight: '200px', backgroundColor: '#444c54', color: 'white', marginLeft: '10px', marginBottom: '10px'}}>\r\n                <Card.Body style={{fontSize: \"xx-large\"}}>{props.card.substr(props.card.length - 2)}</Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n    if (\"yellow\" === props.card.slice(0, -2) || \"yellow\" === props.card.slice(0, -3) ) {\r\n        return(\r\n            <Card style={{ minWidth: '150px', minHeight: '200px', backgroundColor: 'yellow', marginLeft: '10px', marginBottom: '10px'}}>\r\n                <Card.Body style={{fontSize: \"xx-large\"}}>{props.card.substr(props.card.length - 2)}</Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\components\\PrivateRoute.js",[],"C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\components\\Login.js",[],"C:\\Users\\ctrg0\\dev\\webDev\\firebase\\school\\src\\components\\Username.js",["43","44","45","46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":85,"column":31,"nodeType":"53","messageId":"54","endLine":85,"endColumn":51},{"ruleId":"51","severity":1,"message":"52","line":15,"column":31,"nodeType":"53","messageId":"54","endLine":15,"endColumn":51},{"ruleId":"51","severity":1,"message":"55","line":16,"column":31,"nodeType":"53","messageId":"54","endLine":16,"endColumn":51},{"ruleId":"51","severity":1,"message":"56","line":21,"column":14,"nodeType":"53","messageId":"54","endLine":21,"endColumn":26},{"ruleId":"51","severity":1,"message":"57","line":25,"column":14,"nodeType":"53","messageId":"54","endLine":25,"endColumn":26},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'setPlayerOneUsername' is assigned a value but never used.","Identifier","unusedVar","'setPlayerTwoUsername' is assigned a value but never used.","'getUsername1' is defined but never used.","'getUsername2' is defined but never used.","no-global-assign","no-unsafe-negation"]